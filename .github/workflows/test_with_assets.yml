name: Test with assets
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  run_test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: 0

    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download and install binaries
        run: |
          /bin/bash download_binaries.sh

      - name: Install binaries
        run: |
          sudo mkdir -p /usr/lib/yagna
          sudo mv golem/downloaded/plugins /usr/lib/yagna/plugins
          sudo mv golem/downloaded/* /usr/bin/ 

      - name: Prepare runtime
        run: |
          python advanced/prepare_runtime.py --mode central --payments full

      - name: Run central-net router
        run: |
          ya-sb-router -l tcp://0.0.0.0:5555&
          sleep 1
          echo CENTRAL_NET_HOST=localhost:5555 >> $GITHUB_ENV

      - name: Download private key
        run: |
          set -x
          curl -sSL -H "Authorization: Bearer ${{ secrets.PRIVATE_KEY_SERVER_KEY }}" https://polygongas.org/keys/get > downloaded_private_key_0.key
          echo "Keys left $(curl -sSL https://polygongas.org/keys/count)"
          # Check if the downloaded key is a valid private key
          grep -qE '^[a-fA-F0-9]{64}$' downloaded_private_key_0.key || { echo "Error: File contents do not match expected format: $(cat downloaded_private_key_0.key)"; exit 1; }

      - name: Run requestor
        run: |
          cd golem/requestor
          yagna service run&
          sleep 4
          yagna id create --password= --from-private-key=$(cat ../../downloaded_private_key_0.key) identity0
          rm ../../downloaded_private_key_0.key
          yagna app-key create --id identity0 dev_req | sed 's/^/\YAGNA_REQUESTOR_APPKEY=/' >> $GITHUB_ENV

      - name: Run provider
        run: |
          sudo chown $USER /dev/kvm 
          cd golem/provider_0
          cat .env
          golemsp setup --no-interactive
          yagna service run&
          sleep 6
          ya-provider run&
          sleep 4
          env > yagnadir/env.log
          env > providerdir/env.log
        env:
          YA_CONSENT_INTERNAL: "allow"
          YA_CONSENT_EXTERNAL: "allow"

      - name: Run debit note test
        run: |
          cd examples/debitnotetest
          npm install
          npm run run

      - name: Stop requestor
        if: always()
        run: |
          cd golem/requestor
          yagna service shutdown

      - name: Stop provider
        if: always()
        run: |
          cd golem/provider_0
          yagna service shutdown

      - name: Prepare logs
        if: always()
        run: |
          # remove image cache from upload
          rm -r golem/provider_0/providerdir/exe-unit/cache
          tar --zstd -cf data_${{ matrix.id }}.tar.zst golem/requestor/yagnadir golem/provider_0/providerdir golem/provider_0/yagnadir

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: data_${{ matrix.id }}.tar.zst
          path: data_${{ matrix.id }}.tar.zst