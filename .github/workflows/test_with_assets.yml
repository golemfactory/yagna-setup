name: Test with assets
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  fund_accounts:
    runs-on: ubuntu-latest
    outputs:
      eth_private_key_0: ${{ steps.gen-key.outputs.ETH_PRIVATE_KEY_0 }}
      eth_address_0: ${{ steps.gen-key.outputs.ETH_ADDRESS_0 }}
    steps:
      - uses: actions/checkout@v4

      - name: Install erc20_processor
        run: |
          wget https://github.com/golemfactory/erc20_payment_lib/releases/download/pre-rel-v0.4.8-nightly/erc20_processor-linux-x86_64.tar.xz
          tar -xf erc20_processor-linux-x86_64.tar.xz
          sudo cp erc20_processor /usr/bin/erc20_processor
          erc20_processor --version

      - name: Generate ethereum accounts
        id: gen-key
        run: |
          mkdir funding && cd funding
          erc20_processor generate-key -n 5 > .env
          
          cat .env | grep ETH_ADDRESS_ | sed "s/#\s//g" | sed "s/:\s/=/g" >> $GITHUB_OUTPUT
          cat .env | grep ETH_PRIVATE_KEY_ | sed "s/#\s//g" | sed "s/:\s/=/g" >> $GITHUB_OUTPUT

      - name: Fund first account
        run: |
          mkdir funding && cd funding
          echo ${{ secrets.FUNDING_ACCOUNT_01 }} | sed 's/^/ETH_PRIVATE_KEYS=/' > .env
          erc20_processor balance
          erc20_processor transfer --recipient ${{ steps.gen-key.outputs.ETH_ADDRESS_0 }} --token glm --amount 100
          erc20_processor transfer --recipient ${{ steps.gen-key.outputs.ETH_ADDRESS_0 }} --token eth --amount 0.001
          erc20_processor run

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: 0

    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: [fund_accounts]
    steps:
      - uses: actions/checkout@v4

      - name: Install erc20_processor
        run: |
          wget https://github.com/golemfactory/erc20_payment_lib/releases/download/pre-rel-v0.4.8-nightly/erc20_processor-linux-x86_64.tar.xz
          tar -xf erc20_processor-linux-x86_64.tar.xz
          sudo cp erc20_processor /usr/bin/erc20_processor
          erc20_processor --version

      - name: Download and install binaries
        run: |
          /bin/bash download_binaries.sh

      - name: Install binaries
        run: |
          sudo mkdir -p /usr/lib/yagna
          sudo mv golem/downloaded/plugins /usr/lib/yagna/plugins
          sudo mv golem/downloaded/* /usr/bin/ 

      - name: Prepare runtime
        run: |
          python advanced/prepare_runtime.py --mode central --payments full

      - name: Run requestor
        run: |
          cd golem/requestor
          cat .env
          yagna service run&
          sleep 4
          yagna id create --password= --from-private-key=${{ needs.fund_accounts.outputs.eth_private_key_0 }}
          yagna app-key create --id ${{ needs.fund_accounts.outputs.eth_address_0 }} dev_req | sed 's/^/\YAGNA_REQUESTOR_APPKEY=/' >> $GITHUB_ENV

      - name: Run provider
        run: |
          sudo chown $USER /dev/kvm 
          cd golem/provider_0
          cat .env
          golemsp setup --no-interactive
          yagna service run&
          sleep 6
          ya-provider run&
          sleep 4
          env > yagnadir/env.log
          env > providerdir/env.log
        env:
          YA_CONSENT_INTERNAL: "allow"
          YA_CONSENT_EXTERNAL: "allow"

      - name: Run jsexecutor example
        run: |
          cd examples/jsexecutor
          npm install
          npm run run

      - name: Stop requestor
        if: always()
        run: |
          cd golem/requestor
          yagna service shutdown

      - name: Stop provider
        if: always()
        run: |
          cd golem/provider_0
          yagna service shutdown

      - name: Prepare logs
        if: always()
        run: |
          # remove image cache from upload
          rm -r golem/provider_0/providerdir/exe-unit/cache
          tar --zstd -cf data_${{ matrix.id }}.tar.zst golem/requestor/yagnadir golem/provider_0/providerdir golem/provider_0/yagnadir

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: data_${{ matrix.id }}.tar.zst
          path: data_${{ matrix.id }}.tar.zst